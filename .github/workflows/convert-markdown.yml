name: Convert Markdown to PDF and Release

on:
  push:
    paths:
      - '*.md'  # Trigger when a Markdown file is pushed

permissions:
  contents: write

jobs:
  convert_and_release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Debug Git Tags
      run: |
        git tag --list
        git describe --tags --abbrev=0 || echo "No tags found"

    - name: Set up LaTeX for PDF generation
      run: sudo apt-get install texlive-xetex

    - name: Install Pandoc
      run: sudo apt-get install pandoc

    - name: Download and install custom font
      run: |
        mkdir -p ~/.fonts
        wget -O Roboto.zip https://fonts.google.com/download?family=Roboto
        unzip Roboto.zip -d ~/.fonts
        fc-cache -f -v
        # List available fonts to verify installation
        fc-list | grep -i roboto

    - name: Set up Git identity
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

    - name: Get current version from Git tag
      id: get_version
      run: |
        TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.1.0")
        echo "VERSION=${TAG#v}" >> $GITHUB_ENV  # Remove 'v' prefix

    - name: Increment version
      id: increment_version
      run: |
        VERSION=${{ env.VERSION }}
        IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
        PATCH=$((PATCH + 1))
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Tag new version
      run: |
        git tag -a "v${{ env.NEW_VERSION }}" -m "Release v${{ env.NEW_VERSION }}"
        git push origin "v${{ env.NEW_VERSION }}"

    - name: Convert Markdown to PDF
      run: |
        for file in *.md; do
          pandoc "$file" -o "${file%.md}.pdf" --pdf-engine=xelatex --variable mainfont="Roboto" --variable fontsize=12pt --variable geometry:margin=0.5in --variable monofont="Roboto Mono" --variable sansfont="Roboto" --variable documentclass="article"
        done

    - name: Create a GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ env.NEW_VERSION }}"
        files: '*.pdf'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
